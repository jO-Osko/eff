type(_, _) effect += Eff : (unit, unit) effect 
;;
let _op_0 (* - *) = ( - )

let _op_1 (* * *) = ( * )

let _op_2 (* = *) = ( = )

let rec f = 
    x -> (((coer_return (coer_refl_ty)) 
             (let _b_6 = (coer_refl_ty) 
                           (((coer_arrow (coer_refl_ty) (coer_arrow (coer_refl_ty) (coer_refl_ty))) 
                               (_op_2 (* = *))) (x)) in 
              (coer_refl_ty) 
                (((coer_arrow (coer_refl_ty) (coer_refl_ty)) (_b_6)) (0)))) >> (fun 
            _b_5 -> (coer_computation (coer_refl_ty)) 
                      ((match (coer_refl_ty) (_b_5) with
                         true -> (coer_return (coer_refl_ty)) (1)
                        |  false -> (coer_computation (coer_refl_ty)) 
                                      ((((coer_computation (coer_refl_ty)) 
                                           (((coer_arrow (coer_refl_ty) (coer_computation (coer_refl_ty))) 
                                               ((effect Eff))) (()))) >> (fun 
                                          _ -> (coer_computation (coer_refl_ty)) 
                                                 ((((coer_return (coer_refl_ty)) 
                                                      (let _b_8 = (coer_refl_ty) 
                                                                    (
                                                                    ((coer_arrow (coer_refl_ty) (coer_arrow (coer_refl_ty) (coer_refl_ty))) 
                                                                    (_op_0 (* - *))) 
                                                                    (x)) in 
                                                       (coer_refl_ty) 
                                                         (((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
                                                             (_b_8)) (1)))) >> (fun 
                                                     _b_7 -> (coer_computation (coer_refl_ty)) 
                                                               (((coer_arrow (coer_refl_ty) (coer_computation (coer_refl_ty))) 
                                                                   ((coer_arrow (coer_refl_ty) (coer_computation (coer_refl_ty))) 
                                                                    (f))) 
                                                                  (_b_7)))))))))))) 
 in 
 (coer_unsafe (*unsafe*)(coer_refl_ty)) 
   (((coer_handler (coer_computation (coer_refl_ty)) (coer_computation (coer_refl_ty))) 
       ((coer_handler (coer_computation (coer_refl_ty)) (coer_computation (coer_refl_ty))) 
          (handler {value_clause = (fun (_id_12: int) -> Value (_id_12)); 
          effect_clauses = (fun (type a) (type b) (eff : (a, b) effect) : (a -> (b -> _) -> _) -> 
  (match eff with
    | Eff -> fun () l -> Value (
                                                                    let _b_10 = 
                                                                    let _b_11 = 
                                                                    ((coer_refl_ty) 
                                                                    ((coer_refl_ty) 
                                                                    ((coer_arrow (coer_refl_ty) (coer_unsafe (*unsafe*)(coer_refl_ty))) 
                                                                    (l)))) 
                                                                    (()) in 
                                                                    ((coer_refl_ty) 
                                                                    (_op_1 (* * *))) 
                                                                    (_b_11) in 
                                                                    ((coer_refl_ty) 
                                                                    (_b_10)) 
                                                                    (2))   
    | eff' -> (fun arg k -> Call (eff', arg, k))
      )); }))) 
      (((coer_arrow (coer_refl_ty) (coer_computation (coer_refl_ty))) (f)) 
         (5)))

let rec g = 
    x -> let _b_17 = (coer_refl_ty) 
                       (let _b_18 = (coer_refl_ty) 
                                      (((coer_arrow (coer_refl_ty) (coer_arrow (coer_refl_ty) (coer_refl_ty))) 
                                          (_op_2 (* = *))) (x)) in 
                        (coer_refl_ty) 
                          (((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
                              (_b_18)) (0))) in 
         (coer_refl_ty) 
           ((match (coer_refl_ty) (_b_17) with
              true -> (coer_refl_ty) (1)
             |  false -> (coer_refl_ty) 
                           (let _b_19 = (coer_refl_ty) 
                                          (let _b_20 = (coer_refl_ty) 
                                                         (((coer_arrow (coer_refl_ty) (coer_arrow (coer_refl_ty) (coer_refl_ty))) 
                                                             (_op_0 (* - *))) 
                                                            (x)) in 
                                           (coer_refl_ty) 
                                             (((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
                                                 (_b_20)) (1))) in 
                            (coer_refl_ty) 
                              (((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
                                  ((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
                                     (g))) (_b_19))))) 
 in 
 ((coer_arrow (coer_refl_ty) (coer_refl_ty)) 
    ((coer_hand_to_fun (coer_refl_ty) (coer_unsafe (*unsafe*)(coer_refl_ty))) 
       (handler {value_clause = (fun (_id_24: int) -> Value (_id_24)); 
       effect_clauses = (fun (type a) (type b) (eff : (a, b) effect) : (a -> (b -> _) -> _) -> 
  (match eff with
    | Eff -> fun () l -> Value (
                                                                    let _b_22 = 
                                                                    let _b_23 = 
                                                                    ((coer_refl_ty) 
                                                                    ((coer_refl_ty) 
                                                                    ((coer_arrow (coer_refl_ty) (coer_unsafe (*unsafe*)(coer_refl_ty))) 
                                                                    (l)))) 
                                                                    (()) in 
                                                                    ((coer_refl_ty) 
                                                                    (_op_1 (* * *))) 
                                                                    (_b_23) in 
                                                                    ((coer_refl_ty) 
                                                                    (_b_22)) 
                                                                    (2))   
    | eff' -> (fun arg k -> Call (eff', arg, k))
      )); }))) 
   (((coer_refl_ty) (g)) (5))

