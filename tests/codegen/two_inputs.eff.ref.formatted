type (_, _) effect += Decide : (unit, bool) effect

type int_list = Nil | Cons of (int * int_list)

;;
let rec _op_0 (* @ *) _x_20 (_ys_2 : int_list) =
  match _x_20 with
  | Nil -> _ys_2
  | Cons (_x_3, _xs_4) -> Cons (_x_3, _op_0 (* @ *) _xs_4 _ys_2)
in
let _l_21 (_y_37 : bool) =
  Cons ((match _y_37 with true -> 10 | false -> 20), Nil)
in
_op_0 (* @ *) (_l_21 true) (_l_21 false)
