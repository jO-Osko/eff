let _op_0 (* = *) = ( = )

let _op_1 (* + *) = ( + )

let _op_2 (* - *) = ( - )

type (_, _) effect += WriteInt : (int, unit) effect

;;
let rec _f_10 _x_19 =
  Call
    ( WriteInt,
      _x_19,
      fun (_x_0 : unit) ->
        match _op_0 (* = *) _x_19 0 with
        | true -> Value ()
        | false -> _f_10 (_op_2 (* - *) _x_19 1) )
in
let rec _f_20 (_x_19, _k_22) =
  _op_1 (* + *) _x_19
    (match _op_0 (* = *) _x_19 0 with
    | true -> _k_22 ()
    | false -> _f_20 (_op_2 (* - *) _x_19 1, fun (_x_45 : unit) -> _k_22 _x_45))
in
_f_20 (10, fun (_x_7 : unit) -> 0)
