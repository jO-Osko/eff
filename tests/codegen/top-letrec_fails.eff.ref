let _op_0 (* = *) = ( = )
;;
let _op_1 (* - *) = ( - )
;;
type(_, _) effect += Decide : (unit, bool) effect 
;;
type intlist = IntNil | IntCons of (int * intlist)

;;
let rec _concat_2 _x_10 = 
      match _x_10 with
        IntNil -> fun (_ys_12: intlist) -> _ys_12
       |  IntCons ((_z_14, _zs_13)) -> fun (_ys_15: intlist) -> IntCons (
                                                                    _z_14, 
                                                                    _concat_2 
                                                                    _zs_13 
                                                                    _ys_15) 

;; let concat = _concat_2
;;
IntNil
;;
