type (_, _) eff_internal_effect += Decide : (unit, bool) eff_internal_effect

let _two_45 = 2

let two = _two_45

let _three_46 = 3

let three = _three_46

type intlist = IntNil | IntCons of (int * intlist)

;;
let rec _concat_47 _x_65 =
  match _x_65 with
  | IntNil -> fun (_ys_79 : intlist) -> _ys_79
  | IntCons (_z_81, _zs_80) ->
      fun (_ys_82 : intlist) -> IntCons (_z_81, _concat_47 _zs_80 _ys_82)
in
let rec _f_74 _x_69 (_k_77 : int -> intlist) =
  let _l_66 (_y_71 : bool) =
    _k_77 (match _y_71 with true -> 2 | false -> 3)
  in
  _concat_47 (_l_66 true) (_l_66 false)
in
_f_74 () (fun (_x_59 : int) -> IntCons (_x_59, IntNil))
