type (_, _) effect += Get : (unit, int) effect

type (_, _) effect += Put : (int, unit) effect

;;
(let rec _loop_42 _x_65 =
   match 0 < _x_65 with
   | true ->
       Call
         ( Get,
           (),
           fun (_y_78 : int) ->
             Call (Put, _y_78 + 1, fun (_y_81 : unit) -> _loop_42 (_x_65 - 1))
         )
   | false -> Value ()
 in
 let rec _loop_84 (_x_65, _k_86) =
   match 0 < _x_65 with
   | true ->
       fun (_s_95 : int) ->
         _loop_84 (_x_65 - 1, fun (_x_103 : unit) -> _k_86 _x_103) (_s_95 + 1)
   | false -> _k_86 ()
 in
 _loop_84 (10, fun (_x_57 : unit) (_ : int) -> _x_57))
  0
