type ('eff_arg, 'eff_res) effect = ..

type 'a computation =
  | Value : 'a -> 'a computation
  | Call :
      ('eff_arg, 'eff_res) effect * 'eff_arg * ('eff_res -> 'a computation)
        -> 'a computation

type ('eff_arg, 'eff_res, 'b) effect_clauses =
      (('eff_arg, 'eff_res) effect ->
      ('eff_arg -> ('eff_res -> 'b) -> 'b))

type ('a, 'b) handler_clauses =
  {
    value_clause : 'a -> 'b;
    effect_clauses : 'eff_arg 'eff_res. ('eff_arg, 'eff_res, 'b) effect_clauses
  }

let rec ( >> ) (c : 'a computation) (f : 'a -> 'b computation) =
  match c with
  | Value x -> f x
  | Call (eff, arg, k) -> Call (eff, arg, (fun y -> (k y) >> f))

let rec handler (h : ('a, 'b) handler_clauses) : 'a computation -> 'b =
  let rec handler =
    function
    | Value x -> h.value_clause x
    | Call (eff, arg, k) ->
        let clause = h.effect_clauses eff
        in clause arg (fun y -> handler (k y))
  in
  handler

let rec zip l1 l2 =
  match l1 with
  | x::xs -> (match l2 with (y::ys) -> ((x, y)::(zip xs ys)))

let value (x : 'a) : 'a computation = Value x

let call (eff : ('a, 'b) effect) (arg : 'a) (cont : 'b -> 'c computation) :
  'c computation = Call (eff, arg, cont)

let rec lift (f : 'a -> 'b) : 'a computation -> 'b computation = function
  | Value x -> Value (f x)
  | Call (eff, arg, k) -> Call (eff, arg, fun y -> lift f (k y))

let effect eff arg = call eff arg value

let run =
  function
  | Value x -> x
  | Call (eff, _, _) -> failwith ("Uncaught effect")

let ( ** ) =
  let rec pow a = Pervasives.(function
  | 0 -> 1
  | 1 -> a
  | n ->
    let b = pow a (n / 2) in
    b * b * (if n mod 2 = 0 then 1 else a)) in
  pow

let string_length _ = assert false
let to_string _ = assert false

let lift_unary f = fun x -> value (f x)
let lift_binary f = fun x -> value (fun y -> value (f x y))

;;

_var_0 (* < *): ((int) -> ((int) -> (bool))) = <_var_1 (* = *): ((int) -> ((int) -> (bool))) = =_var_2 (* - *): ((int) -> ((int) -> (int))) = -_var_3 (* + *): ((int) -> ((int) -> (int))) = +_var_4 (* ~- *): ((int) -> (int)) = ~-type (_, _) effect += Decide : (unit, bool) effect;;

type (_, _) effect += Fail : (unit, () (empty)) effect;;


| IntTuple of 
() (int) × () (int) ;  
| IntNil 
| IntCons of () (int) × () (intlist) ;  
| IntTupNil 
| IntTupCons of 
() (inttuple) × () (inttuplist) ;  
| Void ;  let test_queens = (fun (n) -> (let absurd = (fun (void) -> ((match (void) with ))) in (let _var_9 (* > *) = (fun (x) -> (fun (y) -> (let _var_12 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_0 (* < *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_12)) (x)))))) in (let _var_13 (* <> *) = (fun (x) -> (fun (y) -> (let _var_16 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_17 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_1 (* = *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_17)) (x))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_16)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (false)) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (true)) )))))) in (let abs = (fun (x) -> (let _var_20 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_21 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_0 (* < *))) (x))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_21)) (0))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_20)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_4 (* ~- *))) (x))) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (x)) ))))) in (let no_attack = (fun (q1) -> (fun (q2) -> ((match ((fun (coer_refl_x) -> (coer_refl_x)) (q1)) with | (IntTuple 
(x, y)) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (q2)) with | (IntTuple 
(x', y')) -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_29 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_30 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_13 (* <> *))) (x))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_30)) (x'))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_29)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_31 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_32 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_13 (* <> *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_32)) (y'))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_31)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_33 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_34 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_35 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_36 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_2 (* - *))) (x))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_36)) (x'))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (abs)) (_var_35))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_13 (* <> *))) (_var_34))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_37 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_38 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_39 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_2 (* - *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_39)) (y'))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (abs)) (_var_38))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_33)) (_var_37))))))) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (false)) ))))) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (false)) ))))) ))) )))) in (let rec not_attacked = fun (qs) -> ((match ((fun (coer_refl_x) -> (coer_refl_x)) (qs)) with | (IntTupNil 
()) -> ((fun (coer_refl_x) -> (coer_refl_x)) (true)) | (IntTupCons (x, xs)) -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_45 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_46 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (no_attack)) (x'))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_46)) (x))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_45)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_47 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (not_attacked))) (x'))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_47)) (xs))))) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (false)) ))))) )) in  (let available = (fun (number_of_queens) -> (fun (x) -> (fun (qs) -> (let rec loop = fun (y) -> (let _var_55 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_56 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_0 (* < *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_56)) (1))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_55)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (possible)) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_57 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_58 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (not_attacked)) ((IntTuple (fun lst -> (map ( (x,y) -> (x y) ) (zip [(fun (coer_refl_x) -> (coer_refl_x));] lst))) ((
x, y)))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_58)) (qs))))) in ((fun (coer_refl_x) -> (coer_refl_x)) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_57)) with | true -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_59 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (loop))) ((IntCons (fun (coer_refl_x) -> (coer_refl_x)) ((
y, possible)))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_60 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_61 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_2 (* - *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_61)) (1))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_59)) (_var_60))))))) | false -> ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_62 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (loop))) (possible))) in ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_63 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_64 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_2 (* - *))) (y))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_64)) (1))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_62)) (_var_63))))))) ))))) )))) in  (let _var_65 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (loop)) ((IntNil ())))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_65)) (number_of_queens)))))))) in (let rec choose = (match ((fun (coer_refl_x) -> (coer_refl_x)) (xs)) with | (IntNil 
()) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (effect Fail)) (())) >> (fun (_var_68) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((match (_var_68) with )))))) | (IntCons 
(x, xs')) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (effect Decide)) (())) >> (fun (_var_71) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_71)) with | true -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (x)) | false -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (choose))) (xs'))) )))))) ) in  (let backtrack = ((fun (x1) -> (fun (x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((x1) (Value ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (x2))))))) ((handler {value_clause = (fun (y) -> (Value ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (let y = ((fun (coer_refl_x) -> (coer_refl_x)) (y)) in (fun (_) -> (y)))))); effect_clauses = (fun (type a) (type b) (x : (a, b) effect) -> ((match x with | Decide -> (fun (_ : a) (l : b -> _ computation) -> (Value ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (fun (kf) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> ((match (x) with | Value (y) -> ((fun (coer_refl_x) -> (coer_refl_x)) (y)) ))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (l)))) (true)) >> (fun (_var_75) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (_var_75)) (fun (_) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> ((match (x) with | Value (y) -> ((fun (coer_refl_x) -> (coer_refl_x)) (y)) ))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (l)))) (false)) >> (fun (_var_76) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (_var_76)) (kf)))))))))))))) | Fail -> (fun (_ : a) (l : b -> _ computation) -> (Value ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (fun (kf) -> (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (kf)) (())))))) | eff' -> (fun arg k -> Call (eff', arg, k))) : a -> (b -> _ computation) -> _ computation)) }))) in (let queens = (fun (number_of_queens) -> (let rec place = fun (qs) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (let _var_88 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_9 (* > *))) (x))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_88)) (number_of_queens)))) >> (fun (_var_87) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((match ((fun (coer_refl_x) -> (coer_refl_x)) (_var_87)) with | true -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (qs)) | false -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (let _var_91 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_92 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (available)) (number_of_queens))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_92)) (x))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_91)) (qs)))) >> (fun (_var_90) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (choose)) (_var_90))))) >> (fun (y) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (let _var_94 = ((fun (coer_refl_x) -> (coer_refl_x)) (let _var_95 = ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_3 (* + *))) (x))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_95)) (1))))) in ((fun (coer_refl_x) -> (coer_refl_x)) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (place))) (_var_94)))) >> (fun (_var_93) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_93)) ((IntTupCons (fun (coer_refl_x) -> (coer_refl_x)) ((
(IntTuple (fun (coer_refl_x) -> (coer_refl_x)) ((x, y))), qs)))))))))))) ))))) in  ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (place)) (1)) >> (fun (_var_96) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (_var_96)) ((IntTupNil ())))))))) in (let queens_one_cps = (fun (number_of_queens) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((fun (x) -> ((match (x) with | Value (y) -> ((fun (coer_refl_x) -> (coer_refl_x)) (y)) ))) (((fun (x1) -> (fun (x2) -> ((fun (x) -> (Value ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (x)))) ((x1) (Value ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (x2))))))) (backtrack)) ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (queens)) (number_of_queens))))) >> (fun (_var_99) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (coer_x2)))))) (_var_99)) (fun (()) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (effect Fail)) (())) >> (fun (_var_100) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (coer_refl_x) -> (coer_refl_x)) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (absurd)) (_var_100))))))))))) in (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (queens_one_cps)) (n)))))))))))))) in (((fun (coer_x1) -> (fun (coer_x2) -> ((fun (x) -> (Value ((fun (coer_refl_x) -> (coer_refl_x)) (x)))) ((coer_x1) ((fun (coer_refl_x) -> (coer_refl_x)) (coer_x2)))))) (test_queens)) (8))